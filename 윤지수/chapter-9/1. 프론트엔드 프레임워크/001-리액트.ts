// 모든 코드의 타입은 자동으로 검사되며 편집기 자동완성 등의 기능도 제공된다.
// 브라우저에서 동작하는 안전하고 타입의 보호를 받는 프로그맹을 가능하게 해줄 것이다.
document.querySelector(".Element").innerHTML;

// 실무에서의 프론트엔드 응용 프로그램 대부분은 DOM 렌더링, 데이터 바인딩, 이벤트 처리 등을 추상화하는 데 프레임워크를 이용한다.

// 리액트 응용 프로그램의 기본 빌딩 블록인 리액트 컴포넌트는 타입스크립트로 정의되고 소비되므로 안전하다.
// "컴포넌트 정의와 소비자(프론트엔드의 뷰 계층) 모두 타입을 검사한다."
// 덕분에 타입을 이용하여 '이 컴포넌트는 사용자 ID와 색을 인수로 받는다' 또는 '이 컴포넌트는 리스트 항목만을 자식으로 가질 수 있다'라고 표현할 수 있다.
// 타입으로 표현한 이러한 제한을 타입스크립트가 강제하며 사용자의 컴포넌트가 이에 부합하는지 확인한다.

// 보통 뷰에서 오타, 속성 누락, 잘못된 타입의 매개변수, 부적절한 요소 중첩 등의 문제가 자주 발생하는데
// 타입스크립트와 리액트로 뷰의 타입을 지정한다면 👍🏻
