// 타입스크립트는 튜플을 선언할 때 튜플의 타입에 관대한 편이다.
// 튜플의 길이, 그리고 어떤 위치에 어떤 타입이 들어있는지는 무시하고, 주어진 상황에서 제공할 수 있는 가장 일반적인 타입으로 튜플의 타입을 추론한다.
let j6 = [1, true];

// f를 배열이 아니라 고정된 길이의 튜플로 취급하고 싶은 경우
// - 타입 어서션을 이용해 튜플을 튜플 타입으로 형변환할 수 있다.
// - as const 어서션을 이용해 튜플의 타입을 가능한 한 좁게 추론하는 동시에 읽기 전용으로 만들 수 있다.

// 타입 어서션을 사용하지 않고, 추론 범위도 좁히지 않고, 읽기 전용 한정자를 추가하는 as const도 사용하지 않으면서 튜플을 튜플 타입으로 만들려면?
// 타입스크립트가 나머지 매개변수의 타입을 추론하는 기법을 이용하면 된다.
// 튜플 타입이 많이 등장하는 코드라면 이 기법을 활용해 타입 어서션 사용을 줄일 수 있다.
function tuple<T extends unknown[]>(...ts: T): T {
  return ts;
}

let k6 = tuple(1, true);
